apply plugin: 'com.android.application'
//apply from: rootProject.getRootDir().getAbsolutePath() + "/utils.gradle"

apply plugin: 'z-debug-helper'
apply plugin: '360jiagu'

Jiagu {
    javaPath "C:\\Users\\admin\\Desktop\\360jiagubao_windows_64\\jiagu\\java\\bin\\java.exe"
    jiaguJarPath "C:\\Users\\admin\\Desktop\\360jiagubao_windows_64\\jiagu\\jiagu.jar"

    account "360U1422083481"
    password "kW^rpUnWQ1o2"

    keystorePath "E:\\ChongGou3\\anlaiye\\Android_Aly\\anlaiye.keystore"
    keystorePassword "anlaiye123465"
    alias "anlaiye"
    aliasPassword "anlaiye123465"

    srcApkPath "E:\\ChongGou3\\anlaiye\\Android_Aly\\app\\build\\outputs\\apk\\app-release.apk"
    outApkPath "E:\\ChongGou3\\anlaiye\\Android_Aly\\app\\build\\outputs\\channels\\"
}



android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "mcxtzhang.commonviewgroupadapter"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        demo {
            minifyEnabled false
        }
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.0.0'
    compile project(':adapter-lib')
    compile 'com.github.bumptech.glide:glide:3.5.2'
    compile 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.2.5'
}

//搜索指定名称的任务 并hook
tasks.getByName("assemble") {
    it.doFirst {
        println "$project.name : After assemble,"
        def pkgName = getPackageAdvanced()
        println "get the pkgName is :" + pkgName
    }
}

println 'app:parent:' + gradle.parent  //null

/*gradle.beforeProject {
    project ->
        println 'I am in app,beforeProject'
        println 'I am in app,beforeProject'
        println 'I am in app,beforeProject'
        println 'I am in app,beforeProject'
        println 'I am in app,beforeProject'
        println 'I am in app,beforeProject'
}

gradle.taskGraph.whenReady {
    graph ->
        println 'I am in app,whenReady'
        println 'I am in app,whenReady'
        println 'I am in app,whenReady'
        println 'I am in app,whenReady'
        println 'I am in app,whenReady'
        println 'I am in app,whenReady'
        copyFile.execute()
}

gradle.buildFinished { result ->
    println 'I am in app,buildFinished'
    println 'I am in app,buildFinished'
    println 'I am in app,buildFinished'
    println 'I am in app,buildFinished'
    println 'I am in app,buildFinished'
    println 'I am in app,buildFinished'
}*/

/*gradle.taskGraph.whenReady {
    //getPkgName.execute()
    testExecCommand.execute()
}*/





